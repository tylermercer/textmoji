name: Build and Deploy to Cloudflare Pages

# Expects these secrets to be configured in your GitHub repo:
# - CLOUDFLARE_API_TOKEN
# - CLOUDFLARE_ACCOUNT_ID
# - GH_PAT (for private repos)
# and these variables:
# - CLOUDFLARE_PROJECT_NAME

on:
  schedule: # Run at 15:00 UTC every day
    - cron: "0 15 * * *"
  push: # Run on pushes to main
    branches:
      - main
  pull_request: # Run on pull requests
    types:
      - opened
      - synchronize
  workflow_dispatch: # Allows running this workflow manually

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v4
        # you can omit the next two lines for public repositories, which can be accessed without a personal access token
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Cache assets
        uses: actions/cache@v3
        with:
          path: | # .cache is for any user-land caching. E.g. in some of my projects I cache rendered OG images
            .cache
            node_modules/.astro
          key: assets-${{ github.run_id }} # Save each run's cache
          restore-keys: | # Restore most recent cache
            assets-

      - name: Extract variables
        id: extract_vars
        run: | # branch_trunc is the branch truncated to 28 chars, which is the CF deploy preview subdomain length
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "datetime=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          branch_trunc=${branch:0:28}
          echo "branch=${branch}" >> $GITHUB_OUTPUT
          echo "branch_trunc=${branch_trunc}" >> $GITHUB_OUTPUT

      - name: Build site
        id: build_site
        env:
          PUBLIC_COMMIT_HASH: ${{ steps.extract_vars.outputs.sha_short }}
        run: |
          npm ci
          npm run build

      - name: Deploy to Cloudflare Pages
        id: deploy
        run: npx wrangler pages deploy --branch=${{ steps.extract_vars.outputs.branch }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Add preview URL to pull request
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b
        with:
          comment_tag: deploy_preview
          mode: recreate
          message: |
            ## Deployed to Cloudflare Pages! :rocket:

            | Name                    | Result |
            | ----------------------- | - |
            | **Preview URL**:        | https://${{ steps.extract_vars.outputs.branch_trunc }}.textmoji.pages.dev |
            | **Last commit:**        | `${{ steps.extract_vars.outputs.sha_short }}` |
            | **Deployed at**:        | `${{ steps.extract_vars.outputs.datetime }}` |
